# Компетенции
## Вкратце о концепции

Мы выделили несколько главных тем, по которым можно оценивать кандидата.
Эти темы не касаются конкретного языка, а больше относятся к разработке в целом.
И только пункт "платформа" содержит тонкости, касающиеся конкретного языка разработки.

Т.ч. данная программа может быть легко перенесена почти на любые другие платформы.

## Основные темы

- Архитектура приложений
- Хранение данных
- Workflow
- Технологии
- Платформа

### Архитектура приложений

Это все, что относится к проектированию приложений:
- ООП (класс, объект, инкапсуляция, наследование, полиморфизм, статические поля и методы, абстрактные классы и интерфейсы, трейты)
- S.O.L.I.D., GRASP
- DI
- SOA (Service-Oriented Architecture)
- Паттерны проектирования (фабрика, декоратор, стратегия и т.д.), антипаттерны, запахи кода
- Архитектурные паттерны (MVC, CQRS, EventSourcing, Слоеная архитектура, Гексагональная)
- Рефакторинг (выделение методов, классов, применение паттернов к коду)
- Проектирование структуры данных, сущностей, их связей
- Алгоритмы, их сложность

### Хранение данных

Это все, что связано с данными:
- СУБД, SQL, noSQL, запросы, join-ы
- Нормализация-денормализация
- Индексы, explain, транзакции, уровни блокировки транзакций
- Поисковые движки: Elasticsearch, Sphinx
- Брокеры сообщений: RabbitMQ, Beanstalk
- Системы кеширования: Memcached, Redis

### Workflow

Все, что связано с рабочим процессом:
- GIT: ветки, ребейз, коммит, мерж, черри-пик, gitflow
- организация рабочего процесса, своего, чужого окружения
- деплой, docker, ansible, gitlabCI, jenkins
- оценка, декомпозиция
- методологии разработки (Agile, Scrum, Kanban)
- понимание целей бизнеса

### Технологии

Все, что связано с инфраструктурой, на которой работают приложения:
- Сервера, linux, командная строка
- Мониторинг, логирование, конфигурация и управление серверным ПО, реакция на инциденты
- Протокол HTTP 1.1/2.0
- Хранение состояния приложения
- Серверные уязвимости

### Платформа

Непосредственно PHP:
- Типы данных, особенности работы php с ними, динамическая типизация
- Представление о внутреннем устройстве типов PHP (zval "Zend value", массивы)
- Различия мажорных версий php, миграция приложений
- Стандарты PSR, composer, автозагрузка, пространства имен
- SPL (Структуры данных - заострить внимание, Итераторы, Исключения, Функции, Классы), генераторы (yield)
- Исключения, уровни ошибок, перехват исключений, выброс исключений
- phpunit
- Уязвимости языка (OWASP)

# Отдельно по грейдам
* [D1](./D1.md)
* [D2](./D2.md)
* [D3](./D3.md)
